{"version":3,"sources":["js/methods.js","js/class.js","js/index.js"],"names":["getDays","time","padTime","Math","floor","getHours","getMins","getSecs","String","padStart","methods","module","exports","require","CountdownTimer","constructor","selector","targetDate","getTime","start","id","setInterval","getTimeDifference","stopData","currentDate","stop","otherTime","updateValues","Date","daysLeft","hoursLeft","minutesLeft","secondsLeft","refs","days","textContent","hours","minutes","seconds","clearInterval","Counter","document","querySelector","timer1","body","style","display","justifyContent","fontSize","fontWeight","paddingTop"],"mappings":";AACA,MAAMA,EAAUC,GAAQC,EAAQC,KAAKC,MAAMH,EAAQ,QAC7CI,EAAWJ,GAAQC,EAAQC,KAAKC,MAAOH,EAAQ,MAAyB,OACxEK,EAAUL,GAAQC,EAAQC,KAAKC,MAAOH,EAAQ,KAAoB,MAClEM,EAAUN,GAAQC,EAAQC,KAAKC,MAAOH,EAAQ,IAAc,MAElE,SAASC,EAAQD,GACNO,OAAAA,OAAOP,GAAMQ,SAAS,EAAI,KAGrC,MAAMC,EAAU,CAAEV,QAAAA,EAASK,SAAAA,EAAUC,QAAAA,EAASC,QAAAA,GAE9CI,OAAOC,QAAUF;;ACZjB,MAAM,QAACV,EAAD,SAAUK,EAAV,QAAoBC,EAApB,QAA6BC,GAAWM,QAAS,gBAEvD,MAAMC,EAEJC,aAAY,SAACC,EAAD,WAAWC,IAChBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAAWC,UAM/BC,QACOC,KAAAA,GAAKC,YAAY,KAEdpB,MAAAA,EAAO,KAAKqB,oBAEbC,KAAAA,SAAW,KAAKN,WAAa,KAAKO,YAEnC,KAAKD,UAAY,EAEdE,KAAAA,QAKAC,KAAAA,UAAY,KAAKC,aAAa1B,GAIhCyB,KAAAA,UAAY,KAAKC,aAAa1B,KAElC,KAGLqB,oBASS,OAPFE,KAAAA,aAAc,IAAII,MAAOV,UAOvB,CAACW,SALS7B,EAAQ,KAAKiB,WAAa,KAAKO,aAK9BM,UAJAzB,EAAS,KAAKY,WAAa,KAAKO,aAIrBO,YAHTzB,EAAQ,KAAKW,WAAa,KAAKO,aAGTQ,YAFtBzB,EAAQ,KAAKU,WAAa,KAAKO,cAKrDG,cAAa,SAACE,EAAD,UAAWC,EAAX,YAAsBC,EAAtB,YAAmCC,IAC9CC,KAAKC,KAAKC,eAAiBN,IAC3BI,KAAKG,MAAMD,eAAiBL,IAC5BG,KAAKI,QAAQF,eAAiBJ,IAC9BE,KAAKK,QAAQH,eAAiBH,IAGhCP,OAEEQ,KAAKC,KAAKC,YAAc,KACxBF,KAAKG,MAAMD,YAAc,KACzBF,KAAKI,QAAQF,YAAc,KAC3BF,KAAKK,QAAQH,YAAc,KAE3BI,cAAc,KAAKnB,KAKvBT,OAAOC,QAAUE;;AClEjB,MAAM0B,EAAU3B,QAAQ,cAExBoB,KAAO,CACLC,KAAMO,SAASC,iBAAiB,KAAK1B,iCACrCoB,MAAOK,SAASC,iBAAiB,KAAK1B,kCACtCqB,QAASI,SAASC,iBAAiB,KAAK1B,iCACxCsB,QAASG,SAASC,iBAAiB,KAAK1B,kCAG1C,MAAM2B,EAAS,IAAIH,EAAQ,CACzBxB,SAAU,WACVC,WAAY,IAAIW,KAAK,6BAGvBe,EAAOxB,QAUP,MAAMyB,EAAOH,SAASG,KAAKC,MAC3BD,EAAKE,QAAU,OACfF,EAAKG,eAAiB,SACtBH,EAAKI,SAAW,OAChBJ,EAAKK,WAAa,OAClBL,EAAKM,WAAa","file":"js.c5c9dbfb.js","sourceRoot":"../src","sourcesContent":["\nconst getDays = time => padTime(Math.floor(time / (1000 * 60 * 60 * 24)));\nconst getHours = time => padTime(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\nconst getMins = time => padTime(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\nconst getSecs = time => padTime(Math.floor((time % (1000 * 60)) / 1000));\n\nfunction padTime(time) {\n    return String(time).padStart(2, `0`) // добавляем нолик если число имеет меньше одной цифры\n}\n\nconst methods = { getDays, getHours, getMins, getSecs }\n\nmodule.exports = methods;","const {getDays, getHours, getMins, getSecs} = require ('./methods.js');\n\nclass CountdownTimer {\n\n  constructor({selector, targetDate}) {\n    this.selector = selector;\n    this.targetDate = targetDate.getTime();\n\n  };\n\n  \n\n  start() {\n    this.id = setInterval(() => {\n\n      const time = this.getTimeDifference();\n\n      this.stopData = this.targetDate - this.currentDate;\n\n      if (this.stopData <= 0) {\n\n        this.stop();\n        return;\n\n      } else {\n\n        this.otherTime = this.updateValues(time);\n        \n        }\n\n      this.otherTime = this.updateValues(time);\n\n    }, 1000)\n  }\n\n  getTimeDifference() {\n\n    this.currentDate = new Date().getTime();\n  \n    const daysLeft = getDays(this.targetDate - this.currentDate)\n    const hoursLeft = getHours(this.targetDate - this.currentDate);\n    const minutesLeft = getMins(this.targetDate - this.currentDate);\n    const secondsLeft = getSecs(this.targetDate - this.currentDate);\n\n    return {daysLeft, hoursLeft, minutesLeft, secondsLeft}\n  }\n\n  updateValues({daysLeft, hoursLeft, minutesLeft, secondsLeft}) {\n    refs.days.textContent = `${daysLeft}`;\n    refs.hours.textContent = `${hoursLeft}`;\n    refs.minutes.textContent = `${minutesLeft}`;\n    refs.seconds.textContent = `${secondsLeft}`;\n  }\n\n  stop() { \n            \n    refs.days.textContent = '00';\n    refs.hours.textContent = '00';\n    refs.minutes.textContent = '00';\n    refs.seconds.textContent = '00';\n\n    clearInterval(this.id)\n  }\n\n}\n\nmodule.exports = CountdownTimer;\n\n\n\n\n\n\n\n\n\n\n","const Counter = require('./class.js');\n\nrefs = {\n  days: document.querySelector(`${this.selector}, [data-value=\"days\"]`),\n  hours: document.querySelector(`${this.selector}, [data-value=\"hours\"]`),\n  minutes: document.querySelector(`${this.selector}, [data-value=\"mins\"]`),\n  seconds: document.querySelector(`${this.selector}, [data-value=\"secs\"]`),\n}\n\nconst timer1 = new Counter({\n  selector: '#timer-1',\n  targetDate: new Date('June 31, 2021, 15:34:40'),\n});\n\ntimer1.start()\n\n\n\n\n\n\n\n\n// some styles\nconst body = document.body.style;\nbody.display = 'flex';\nbody.justifyContent = 'center';\nbody.fontSize = '24px'\nbody.fontWeight = 'bold'\nbody.paddingTop = '40px'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}