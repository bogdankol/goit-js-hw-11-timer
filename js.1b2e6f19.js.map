{"version":3,"sources":["js/methods.js","js/class.js","js/index.js"],"names":["getDays","time","Math","floor","getHours","getMins","getSecs","methods","module","exports","require","CountdownTimer","constructor","selector","targetDate","getTime","start","setInterval","getTimeDifference","otherTime","updateValues","console","log","currentDate","Date","daysLeft","hoursLeft","minutesLeft","secondsLeft","refs","days","textContent","hours","minutes","seconds","Counter","document","querySelector","timer1","body","style","display","justifyContent","fontSize","fontWeight","paddingTop"],"mappings":";AACA,MAAMA,EAAUC,GAAQC,KAAKC,MAAMF,EAAQ,OACrCG,EAAWH,GAAQC,KAAKC,MAAOF,EAAQ,MAAyB,MAChEI,EAAUJ,GAAQC,KAAKC,MAAOF,EAAQ,KAAoB,KAC1DK,EAAUL,GAAQC,KAAKC,MAAOF,EAAQ,IAAc,KAEpDM,EAAU,CAAEP,QAAAA,EAASI,SAAAA,EAAUC,QAAAA,EAASC,QAAAA,GAE9CE,OAAOC,QAAUF;;ACRjB,MAAM,QAACP,EAAD,SAAUI,EAAV,QAAoBC,EAApB,QAA6BC,GAAWI,QAAS,gBAEvD,MAAMC,EAEJC,aAAY,SAACC,EAAD,WAAWC,IAChBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAAWC,UAG/BC,QACEC,YAAY,KACJhB,MAAAA,EAAO,KAAKiB,oBACbC,KAAAA,UAAY,KAAKC,aAAanB,GACnCoB,QAAQC,IAAIrB,IACX,KAGLiB,oBAEQK,MAAAA,GAAc,IAAIC,MAAOT,UAOxB,MAAA,CAACU,SALSzB,EAAQ,KAAKc,WAAaS,GAKzBG,UAJAtB,EAAS,KAAKU,WAAaS,GAIhBI,YAHTtB,EAAQ,KAAKS,WAAaS,GAGJK,YAFtBtB,EAAQ,KAAKQ,WAAaS,IAKhDH,cAAa,SAACK,EAAD,UAAWC,EAAX,YAAsBC,EAAtB,YAAmCC,IAC9CC,KAAKC,KAAKC,eAAiBN,IAC3BI,KAAKG,MAAMD,eAAiBL,IAC5BG,KAAKI,QAAQF,eAAiBJ,IAC9BE,KAAKK,QAAQH,eAAiBH,KAIlCpB,OAAOC,QAAUE;;ACrCjB,MAAMwB,EAAUzB,QAAQ,cAExBmB,KAAO,CACLC,KAAMM,SAASC,iBAAiB,KAAKxB,iCACrCmB,MAAOI,SAASC,iBAAiB,KAAKxB,kCACtCoB,QAASG,SAASC,iBAAiB,KAAKxB,iCACxCqB,QAASE,SAASC,iBAAiB,KAAKxB,kCAG1C,MAAMyB,EAAS,IAAIH,EAAQ,CACzBtB,SAAU,WACVC,WAAY,IAAIU,KAAK,kBAGvBc,EAAOtB,QAUP,MAAMuB,EAAOH,SAASG,KAAKC,MAC3BD,EAAKE,QAAU,OACfF,EAAKG,eAAiB,SACtBH,EAAKI,SAAW,OAChBJ,EAAKK,WAAa,OAClBL,EAAKM,WAAa","file":"js.1b2e6f19.js","sourceRoot":"../src","sourcesContent":["\nconst getDays = time => Math.floor(time / (1000 * 60 * 60 * 24));\nconst getHours = time => Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\nconst getMins = time => Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\nconst getSecs = time => Math.floor((time % (1000 * 60)) / 1000);\n\nconst methods = { getDays, getHours, getMins, getSecs }\n\nmodule.exports = methods;","const {getDays, getHours, getMins, getSecs} = require ('./methods.js');\n\nclass CountdownTimer {\n\n  constructor({selector, targetDate}) {\n    this.selector = selector;\n    this.targetDate = targetDate.getTime();\n  };\n\n  start() {\n    setInterval(() => {\n      const time = this.getTimeDifference();\n      this.otherTime = this.updateValues(time);\n      console.log(time)\n    }, 1000)\n  }\n\n  getTimeDifference() {\n\n    const currentDate = new Date().getTime()\n  \n    const daysLeft = getDays(this.targetDate - currentDate)\n    const hoursLeft = getHours(this.targetDate - currentDate)\n    const minutesLeft = getMins(this.targetDate - currentDate)\n    const secondsLeft = getSecs(this.targetDate - currentDate)\n\n    return {daysLeft, hoursLeft, minutesLeft, secondsLeft}\n  }\n\n  updateValues({daysLeft, hoursLeft, minutesLeft, secondsLeft}) {\n    refs.days.textContent = `${daysLeft}`;\n    refs.hours.textContent = `${hoursLeft}`;\n    refs.minutes.textContent = `${minutesLeft}`;\n    refs.seconds.textContent = `${secondsLeft}`;\n  }\n}\n\nmodule.exports = CountdownTimer;\n\n\n\n\n\n\n\n\n\n\n\n","const Counter = require('./class.js');\n\nrefs = {\n  days: document.querySelector(`${this.selector}, [data-value=\"days\"]`),\n  hours: document.querySelector(`${this.selector}, [data-value=\"hours\"]`),\n  minutes: document.querySelector(`${this.selector}, [data-value=\"mins\"]`),\n  seconds: document.querySelector(`${this.selector}, [data-value=\"secs\"]`),\n}\n\nconst timer1 = new Counter({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n});\n\ntimer1.start()\n\n\n\n\n\n\n\n\n// some styles\nconst body = document.body.style;\nbody.display = 'flex';\nbody.justifyContent = 'center';\nbody.fontSize = '24px'\nbody.fontWeight = 'bold'\nbody.paddingTop = '40px'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}